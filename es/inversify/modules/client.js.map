{"version":3,"sources":["src/inversify/modules/client.js","src/inversify/modules/client.ts"],"names":["KernelModule","DomCookieProxy","ClientBuilder","DomStateProxy","DomRetaxConfigStore","RETAX_CONFIG_STORE","COOKIE_PROXY","JSX_BUILDER","STATE_PROXY","bind","to","inSingletonScope"],"mappings":"AAAA,SCASA,YDAT,QCAyC,WDAzC;AACA,SCCuBC,cDDvB,QCC6C,qBDD7C;AACA,SCCsBC,aDDtB,QCC2C,mBDD3C;AACA,SCCsBC,aDDtB,QCC2C,oBDD3C;AACA,SCC4BC,mBDD5B,QCCuD,oBDDvD;AACA,SCGEC,kBDHF,ECIEC,YDJF,ECKEC,WDLF,ECMEC,WDNF,QCOO,gBDPP;ACSA,eAAe,IAAIR,YAAJ,CAAiB,UAACS,IAAD,EAAsB;AACpDA,SAAwBJ,kBAAxB,EAA4CK,EAA5C,CAA+CN,mBAA/C,EAAoEO,gBAApE;AACAF,SAAmBH,YAAnB,EAAiCI,EAAjC,CAAoCT,cAApC,EAAoDU,gBAApD;AACAF,SAAkBD,WAAlB,EAA+BE,EAA/B,CAAkCP,aAAlC,EAAiDQ,gBAAjD;AACAF,SAAkBF,WAAlB,EAA+BG,EAA/B,CAAkCR,aAAlC;AACD,CALc,CAAf","file":"client.js","sourcesContent":["import { KernelModule } from 'inversify';\nimport { DomCookieProxy } from '../../cookieProxies';\nimport { ClientBuilder } from '../../JSXBuilders';\nimport { DomStateProxy } from '../../stateProxies';\nimport { DomRetaxConfigStore } from '../../configStores';\nimport { RETAX_CONFIG_STORE, COOKIE_PROXY, JSX_BUILDER, STATE_PROXY } from '../identifiers';\nexport default new KernelModule((bind) => {\n    bind(RETAX_CONFIG_STORE).to(DomRetaxConfigStore).inSingletonScope();\n    bind(COOKIE_PROXY).to(DomCookieProxy).inSingletonScope();\n    bind(STATE_PROXY).to(DomStateProxy).inSingletonScope();\n    bind(JSX_BUILDER).to(ClientBuilder);\n});\n","import { KernelModule, interfaces } from 'inversify';\n\nimport { ICookieProxy, DomCookieProxy } from '../../cookieProxies';\nimport { IJSXBuilder, ClientBuilder } from '../../JSXBuilders';\nimport { IStateProxy, DomStateProxy } from '../../stateProxies';\nimport { IRetaxConfigStore, DomRetaxConfigStore } from '../../configStores';\n\nimport {\n  RETAX_CONFIG_STORE,\n  COOKIE_PROXY,\n  JSX_BUILDER,\n  STATE_PROXY,\n} from '../identifiers';\n\nexport default new KernelModule((bind: interfaces.Bind) => {\n  bind<IRetaxConfigStore>(RETAX_CONFIG_STORE).to(DomRetaxConfigStore).inSingletonScope();\n  bind<ICookieProxy>(COOKIE_PROXY).to(DomCookieProxy).inSingletonScope();\n  bind<IStateProxy>(STATE_PROXY).to(DomStateProxy).inSingletonScope();\n  bind<IJSXBuilder>(JSX_BUILDER).to(ClientBuilder);\n});\n"]}