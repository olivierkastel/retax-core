{"version":3,"sources":["src/mediator/Mediator.js","src/mediator/Mediator.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","result","done","then","apply","injectable","inject","CONTEXT","COOKIE_PROXY","STATE_PROXY","REDUX_FACADE","REACT_ROUTER_FACADE","LIFECYCLE_ACTIONS_CREATOR","JSX_BUILDER","RetaxMediator","_context","_cookieProxy","_stateProxy","_reduxFacade","_routerFacade","_lifecycleActionsCreator","_jsxBuilder","kernel","initialState","read","initialize","_runPreRouteHook","renderProps","_runPostRouteHook","app","build","_attachHistoryChangeHook","_completeInitialization","authToken","willResolveRoute","dispatch","didResolveRoute","historyDidChanged","history","listen","_historyChangeHook","bind","location","resolveRoute","initializationComplete","store"],"mappings":"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","file":"Mediator.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nimport { injectable, inject } from 'inversify';\nimport { CONTEXT, COOKIE_PROXY, STATE_PROXY, REDUX_FACADE, REACT_ROUTER_FACADE, LIFECYCLE_ACTIONS_CREATOR, JSX_BUILDER } from '../inversify/identifiers';\nlet RetaxMediator = class RetaxMediator {\n    constructor(_context, _cookieProxy, _stateProxy, _reduxFacade, _routerFacade, _lifecycleActionsCreator, _jsxBuilder) {\n        this._context = _context;\n        this._cookieProxy = _cookieProxy;\n        this._stateProxy = _stateProxy;\n        this._reduxFacade = _reduxFacade;\n        this._routerFacade = _routerFacade;\n        this._lifecycleActionsCreator = _lifecycleActionsCreator;\n        this._jsxBuilder = _jsxBuilder;\n    }\n    run(kernel) {\n        return __awaiter(this, void 0, Promise, function* () {\n            // initial state\n            const initialState = this._stateProxy.read();\n            // this.redux Facade init\n            this._reduxFacade.initialize(initialState);\n            // preroute hook\n            yield this._runPreRouteHook();\n            // this.router resolve route\n            const renderProps = yield this._routerFacade.initialize();\n            // postroute hook\n            yield this._runPostRouteHook(renderProps);\n            // builder\n            const app = this._jsxBuilder.build(kernel);\n            // history hook\n            this._attachHistoryChangeHook();\n            // notify the user that everything is initialized\n            this._completeInitialization();\n            return app;\n        });\n    }\n    _runPreRouteHook() {\n        return __awaiter(this, void 0, Promise, function* () {\n            const { authToken } = this._cookieProxy;\n            if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.willResolveRoute) {\n                yield this._reduxFacade.dispatch(this._lifecycleActionsCreator.willResolveRoute(!!authToken));\n            }\n        });\n    }\n    _runPostRouteHook(renderProps) {\n        return __awaiter(this, void 0, Promise, function* () {\n            if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.didResolveRoute) {\n                yield this._reduxFacade.dispatch(this._lifecycleActionsCreator.didResolveRoute(renderProps));\n            }\n        });\n    }\n    _attachHistoryChangeHook() {\n        if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.historyDidChanged) {\n            this._context.history.listen(this._historyChangeHook.bind(this));\n        }\n    }\n    _historyChangeHook(location) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const renderProps = yield this._routerFacade.resolveRoute();\n            this._reduxFacade.dispatch(this._lifecycleActionsCreator.historyDidChanged(location, renderProps));\n        });\n    }\n    _completeInitialization() {\n        if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.initializationComplete) {\n            this._lifecycleActionsCreator.initializationComplete(this._reduxFacade.store);\n        }\n    }\n};\nRetaxMediator = __decorate([\n    injectable(),\n    __param(0, inject(CONTEXT)),\n    __param(1, inject(COOKIE_PROXY)),\n    __param(2, inject(STATE_PROXY)),\n    __param(3, inject(REDUX_FACADE)),\n    __param(4, inject(REACT_ROUTER_FACADE)),\n    __param(5, inject(LIFECYCLE_ACTIONS_CREATOR)),\n    __param(6, inject(JSX_BUILDER)), \n    __metadata('design:paramtypes', [Object, Object, Object, Object, Object, Object, Object])\n], RetaxMediator);\nexport default RetaxMediator;\n","import { injectable, inject } from 'inversify';\n\nimport { IRetaxMediator } from './interfaces';\n\nimport { IInversifyKernelFacade } from '../inversifyKernelFacade';\nimport { ICookieProxy } from '../cookieProxies';\nimport { IStateProxy } from '../stateProxies';\nimport { IReduxFacade } from '../redux';\nimport { IReactRouterFacade, IRouterContextProps } from '../reactRouter';\nimport { ILifecycleService } from '../components';\nimport { IJSXBuilder } from '../JSXBuilders';\nimport { IContext } from '../context';\n\nimport {\n  CONTEXT,\n  COOKIE_PROXY,\n  STATE_PROXY,\n  REDUX_FACADE,\n  REACT_ROUTER_FACADE,\n  LIFECYCLE_ACTIONS_CREATOR,\n  JSX_BUILDER,\n} from '../inversify/identifiers';\n\n@injectable()\nexport default class RetaxMediator implements IRetaxMediator {\n  constructor(\n    @inject(CONTEXT) private _context: IContext,\n    @inject(COOKIE_PROXY) private _cookieProxy: ICookieProxy,\n    @inject(STATE_PROXY) private _stateProxy: IStateProxy,\n    @inject(REDUX_FACADE) private _reduxFacade: IReduxFacade,\n    @inject(REACT_ROUTER_FACADE) private _routerFacade: IReactRouterFacade,\n    @inject(LIFECYCLE_ACTIONS_CREATOR) private _lifecycleActionsCreator: ILifecycleService,\n    @inject(JSX_BUILDER) private _jsxBuilder: IJSXBuilder\n  ) {}\n\n  public async run(kernel: IInversifyKernelFacade): Promise<JSX.Element> {\n    // initial state\n    const initialState = this._stateProxy.read();\n\n    // this.redux Facade init\n    this._reduxFacade.initialize(initialState);\n\n    // preroute hook\n    await this._runPreRouteHook();\n\n    // this.router resolve route\n    const renderProps = await this._routerFacade.initialize();\n\n    // postroute hook\n    await this._runPostRouteHook(renderProps);\n\n    // builder\n    const app = this._jsxBuilder.build(kernel);\n\n    // history hook\n    this._attachHistoryChangeHook();\n\n    // notify the user that everything is initialized\n    this._completeInitialization();\n\n    return app;\n  }\n\n  private async _runPreRouteHook(): Promise<void> {\n    const { authToken } = this._cookieProxy;\n\n    if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.willResolveRoute) {\n      await this._reduxFacade.dispatch(\n        this._lifecycleActionsCreator.willResolveRoute(!!authToken)\n      );\n    }\n  }\n\n  private async _runPostRouteHook(renderProps: IRouterContextProps): Promise<void> {\n    if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.didResolveRoute) {\n      await this._reduxFacade.dispatch(\n        this._lifecycleActionsCreator.didResolveRoute(renderProps)\n      );\n    }\n  }\n\n  private _attachHistoryChangeHook(): void {\n    if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.historyDidChanged) {\n      this._context.history.listen(this._historyChangeHook.bind(this));\n    }\n  }\n\n  private async _historyChangeHook(location: HistoryModule.Location): Promise<void> {\n    const renderProps = await this._routerFacade.resolveRoute();\n\n    this._reduxFacade.dispatch(\n      this._lifecycleActionsCreator.historyDidChanged(location, renderProps)\n    );\n  }\n\n  private _completeInitialization(): void {\n    if (this._lifecycleActionsCreator && this._lifecycleActionsCreator.initializationComplete) {\n      this._lifecycleActionsCreator.initializationComplete(this._reduxFacade.store);\n    }\n  }\n}\n"]}