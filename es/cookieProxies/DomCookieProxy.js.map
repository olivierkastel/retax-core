{"version":3,"sources":["src/cookieProxies/DomCookieProxy.js","src/cookieProxies/DomCookieProxy.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","injectable","Cookie","CookieProxy","COOKIE_AUTH_TOKEN_KEY","DomCookieProxy","console","log","remove","token","_readAuthToken","undefined","set","get"],"mappings":";;;;;;;;;;AAAA,IAAIA,aAAc,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,QAAIC,IAAIC,UAAUC,MAAlB;AAAA,QAA0BC,IAAIH,IAAI,CAAJ,GAAQH,MAAR,GAAiBE,SAAS,IAAT,GAAgBA,OAAOK,OAAOC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,QAA2HO,CAA3H;AACA,QAAI,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,QAAQC,QAAf,KAA4B,UAA/D,EAA2EL,IAAII,QAAQC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,IAAIb,WAAWM,MAAX,GAAoB,CAAjC,EAAoCO,KAAK,CAAzC,EAA4CA,GAA5C;AAAiD,YAAIH,IAAIV,WAAWa,CAAX,CAAR,EAAuBN,IAAI,CAACH,IAAI,CAAJ,GAAQM,EAAEH,CAAF,CAAR,GAAeH,IAAI,CAAJ,GAAQM,EAAET,MAAF,EAAUC,GAAV,EAAeK,CAAf,CAAR,GAA4BG,EAAET,MAAF,EAAUC,GAAV,CAA5C,KAA+DK,CAAnE;AAAxE,KACL,OAAOH,IAAI,CAAJ,IAASG,CAAT,IAAcC,OAAOM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;AAMA,IAAIQ,aAAc,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,QAAI,QAAON,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,QAAQO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,QAAQO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;AAGA,SCTSE,UDST,QCT2B,WDS3B;AACA,OCTO,KAAKC,MDSZ,MCTwB,WDSxB;AACA,OCPOC,WDOP,MCPwB,eDOxB;AACA,SCNSC,qBDMT,QCNsC,cDMtC;ACHA,IAAAC;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CACwB;AACpBC,oBAAQC,GAAR,CAAY,wCAAZ;AACAL,mBAAOM,MAAP,CAAcJ,qBAAd;AACD;AAJH;AAAA;AAAA,sCAM0BK,KAN1B,EAMuC;AACnC,gBAAI,CAACA,KAAL,EAAY;AACZ,gBAAI,KAAKC,cAAL,OAA0BC,SAA9B,EAAyC;AACvCL,wBAAQC,GAAR,CAAY,iDAAZ;AACAL,uBAAOU,GAAP,CAAWR,qBAAX,EAAkCK,KAAlC;AACD;AACF;AAZH;AAAA;AAAA,yCAc0B;AACtBH,oBAAQC,GAAR,CAAY,qCAAZ;AACA,mBAAOL,OAAOW,GAAP,CAAWT,qBAAX,CAAP;AACD;AAjBH;;AAAA;AAAA,EAA4CD,WAA5C,CAAA;AADAE,iBAAAxB,WAAA,CAACoB,YAAD,EDyBIJ,WAAW,mBAAX,EAAgC,EAAhC,CCzBJ,CAAA,ED0BGQ,cC1BH,CAAA;AD2BA,eAAeA,cAAf","file":"DomCookieProxy.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { injectable } from 'inversify';\nimport * as Cookie from 'js-cookie';\nimport CookieProxy from './CookieProxy';\nimport { COOKIE_AUTH_TOKEN_KEY } from '../constants';\nlet DomCookieProxy = class DomCookieProxy extends CookieProxy {\n    deleteAuthToken() {\n        console.log('deleteAuthToken : we delete the cookie');\n        Cookie.remove(COOKIE_AUTH_TOKEN_KEY);\n    }\n    _setAuthToken(token) {\n        if (!token)\n            return;\n        if (this._readAuthToken() === undefined) {\n            console.log('_readAuthToken is undefined : we set the cookie');\n            Cookie.set(COOKIE_AUTH_TOKEN_KEY, token);\n        }\n    }\n    _readAuthToken() {\n        console.log('_readAuthToken : we read the cookie');\n        return Cookie.get(COOKIE_AUTH_TOKEN_KEY);\n    }\n};\nDomCookieProxy = __decorate([\n    injectable(), \n    __metadata('design:paramtypes', [])\n], DomCookieProxy);\nexport default DomCookieProxy;\n","import { injectable } from 'inversify';\nimport * as Cookie from 'js-cookie';\n\nimport { ICookieProxy } from './interfaces';\nimport CookieProxy from './CookieProxy';\n\nimport { COOKIE_AUTH_TOKEN_KEY } from '../constants';\n\n@injectable()\nexport default class DomCookieProxy extends CookieProxy implements ICookieProxy {\n  public deleteAuthToken(): void {\n    console.log('deleteAuthToken : we delete the cookie');\n    Cookie.remove(COOKIE_AUTH_TOKEN_KEY);\n  }\n\n  protected _setAuthToken(token: string): void {\n    if (!token) return;\n    if (this._readAuthToken() === undefined) {\n      console.log('_readAuthToken is undefined : we set the cookie');\n      Cookie.set(COOKIE_AUTH_TOKEN_KEY, token);\n    }\n  }\n\n  protected _readAuthToken(): string {\n    console.log('_readAuthToken : we read the cookie');\n    return Cookie.get(COOKIE_AUTH_TOKEN_KEY);\n  }\n}\n"]}