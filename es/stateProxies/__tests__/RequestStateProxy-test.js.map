{"version":3,"sources":["src/stateProxies/__tests__/RequestStateProxy-test.ts","src/stateProxies/__tests__/RequestStateProxy-test.js"],"names":["jest","unmock","RequestStateProxy","describe","it","proxy","res","read","expect","toEqual"],"mappings":"AAAAA,KAAKC,MAAL,CAAY,WAAZ;AACAD,KAAKC,MAAL,CAAY,sBAAZ;ACCA,ODCOC,iBCDP,MDC8B,sBCD9B;ADGAC,SAAS,mBAAT,EAA8B,YAAA;AAC5BC,OAAG,+DAAH,EAAoE,YAAA;AAClE,YAAMC,QAAQ,IAAIH,iBAAJ,EAAd;AAEA,YAAMI,MAAMD,MAAME,IAAN,EAAZ;AAEAC,eAAOF,GAAP,EAAYG,OAAZ,CAAoB,EAApB;AACD,KAND;AAOD,CARD","file":"RequestStateProxy-test.js","sourcesContent":["jest.unmock('inversify');\njest.unmock('../RequestStateProxy');\n\nimport RequestStateProxy from '../RequestStateProxy';\n\ndescribe('RequestStateProxy', () => {\n  it('reads the initial state and convert it to an immutable object', () => {\n    const proxy = new RequestStateProxy();\n\n    const res = proxy.read();\n\n    expect(res).toEqual({});\n  });\n});\n","jest.unmock('inversify');\njest.unmock('../RequestStateProxy');\nimport RequestStateProxy from '../RequestStateProxy';\ndescribe('RequestStateProxy', () => {\n    it('reads the initial state and convert it to an immutable object', () => {\n        const proxy = new RequestStateProxy();\n        const res = proxy.read();\n        expect(res).toEqual({});\n    });\n});\n"]}