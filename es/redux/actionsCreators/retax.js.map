{"version":3,"sources":["src/redux/actionsCreators/retax.js","src/redux/actionsCreators/retax.ts"],"names":["SET_AUTH_TOKEN","REMOVE_AUTH_TOKEN","actionsCreatorFactory","isSetAuthTokenAction","a","type","isRemoveAuthTokenAction","setAuthToken","removeAuthToken"],"mappings":"AAAA,SCESA,cDFT,ECEyBC,iBDFzB,QCEkD,cDFlD;AACA,SCESC,qBDFT,QCE+D,aDF/D;ACIA,OAAA,SAAAC,oBAAA,CAAqCC,CAArC,EAAyD;AACvD,WAAOA,EAAEC,IAAF,KAAWL,cAAlB;AACD;AAED,OAAA,SAAAM,uBAAA,CAAwCF,CAAxC,EAA4D;AAC1D,WAAOA,EAAEC,IAAF,KAAWJ,iBAAlB;AACD;AAED,OAAO,IAAMM,eACXL,sBAAkDF,cAAlD,CADK;AAGP,OAAO,IAAMQ,kBACXN,sBAAkCD,iBAAlC,CADK","file":"retax.js","sourcesContent":["import { SET_AUTH_TOKEN, REMOVE_AUTH_TOKEN } from '../constants';\nimport { actionsCreatorFactory } from 'retax-utils';\nexport function isSetAuthTokenAction(a) {\n    return a.type === SET_AUTH_TOKEN;\n}\nexport function isRemoveAuthTokenAction(a) {\n    return a.type === REMOVE_AUTH_TOKEN;\n}\nexport const setAuthToken = actionsCreatorFactory(SET_AUTH_TOKEN);\nexport const removeAuthToken = actionsCreatorFactory(REMOVE_AUTH_TOKEN);\n","import { TSetAuthTokenPayload } from './interfaces';\n\nimport { SET_AUTH_TOKEN, REMOVE_AUTH_TOKEN } from '../constants';\nimport { actionsCreatorFactory, IActionCreator, IAction } from 'retax-utils';\n\nexport function isSetAuthTokenAction(a: IAction<any, any>): a is IAction<TSetAuthTokenPayload, void> {\n  return a.type === SET_AUTH_TOKEN;\n}\n\nexport function isRemoveAuthTokenAction(a: IAction<any, any>): a is IAction<void, void> {\n  return a.type === REMOVE_AUTH_TOKEN;\n}\n\nexport const setAuthToken: IActionCreator<TSetAuthTokenPayload, void> =\n  actionsCreatorFactory<TSetAuthTokenPayload, void>(SET_AUTH_TOKEN);\n\nexport const removeAuthToken: IActionCreator<void, void> =\n  actionsCreatorFactory<void, void>(REMOVE_AUTH_TOKEN);\n"]}