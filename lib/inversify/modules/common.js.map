{"version":3,"sources":["src/inversify/modules/common.ts","src/inversify/modules/common.js"],"names":["contextModuleFactory","lifecycleModuleFactory","bind","to","inSingletonScope","RETAX_PROVIDER_COMPONENT","toConstructor","context","toConstantValue","LifecycleActionsCreator","undefined"],"mappings":";;;;;QA0BAA,oB,GAAAA,oB;QAMAC,sB,GAAAA,sB;;AChCA;;AACA;;AACA;;AACA;;AACA;;AACA;;kBDYe,4BAAiB,UAACC,IAAD,EAAsB;AACpDA,gCAA+BC,EAA/B,0BAAiDC,gBAAjD;AACAF,2CAA8CC,EAA9C,iCAAoEC,gBAApE;AACAF,oCAAiCC,EAAjC,qBAAiDC,gBAAjD;AAEAF,SAA2B,wBAAWG,wBAAtC,EAAgEC,aAAhE;AACD,CANc,C;AASf,SAAAN,oBAAA,CAAqCO,OAArC,EAAsD;AACpD,WAAO,4BAAiB,UAACL,IAAD,EAAsB;AAC5CA,mCAAwBM,eAAxB,CAAwCD,OAAxC;AACD,KAFM,CAAP;AAGD;AAED,SAAAN,sBAAA,CAAuCQ,uBAAvC,EAA4F;AAC1F,WAAO,4BAAiB,UAACP,IAAD,EAAsB;AAC5C,YAAIO,uBAAJ,EAA6B;AAC3BP,yDAAmDC,EAAnD,CAAsDM,uBAAtD;AACD,SAFD,MAEO;AACLP,yDAAmDM,eAAnD,CAAmEE,SAAnE;AACD;AACF,KANM,CAAP;AAOD","file":"common.js","sourcesContent":["import { interfaces, KernelModule } from 'inversify';\n\nimport { RetaxProvider, ILifecycleService, ILifecycleServiceConstructor } from '../../components';\nimport { IReactRouterFacade, ReactRouterFacade } from '../../reactRouter';\nimport { IReduxFacade, ReduxFacade } from '../../redux';\nimport { IRetaxMediator, RetaxMediator } from '../../mediator';\nimport { IContext } from '../../context';\n\nimport {\n  MEDIATOR,\n  COMPONENTS,\n  REACT_ROUTER_FACADE,\n  REDUX_FACADE,\n  CONTEXT,\n  LIFECYCLE_ACTIONS_CREATOR,\n} from '../identifiers';\n\nexport default new KernelModule((bind: interfaces.Bind) => {\n  bind<IRetaxMediator>(MEDIATOR).to(RetaxMediator).inSingletonScope();\n  bind<IReactRouterFacade>(REACT_ROUTER_FACADE).to(ReactRouterFacade).inSingletonScope();\n  bind<IReduxFacade>(REDUX_FACADE).to(ReduxFacade).inSingletonScope();\n\n  bind<typeof RetaxProvider>(COMPONENTS.RETAX_PROVIDER_COMPONENT).toConstructor(RetaxProvider);\n});\n\n\nexport function contextModuleFactory(context: IContext): interfaces.KernelModule {\n  return new KernelModule((bind: interfaces.Bind) => {\n    bind<IContext>(CONTEXT).toConstantValue(context);\n  });\n}\n\nexport function lifecycleModuleFactory(LifecycleActionsCreator: ILifecycleServiceConstructor): interfaces.KernelModule {\n  return new KernelModule((bind: interfaces.Bind) => {\n    if (LifecycleActionsCreator) {\n      bind<ILifecycleService>(LIFECYCLE_ACTIONS_CREATOR).to(LifecycleActionsCreator);\n    } else {\n      bind<ILifecycleService>(LIFECYCLE_ACTIONS_CREATOR).toConstantValue(undefined);\n    }\n  });\n}\n","import { KernelModule } from 'inversify';\nimport { RetaxProvider } from '../../components';\nimport { ReactRouterFacade } from '../../reactRouter';\nimport { ReduxFacade } from '../../redux';\nimport { RetaxMediator } from '../../mediator';\nimport { MEDIATOR, COMPONENTS, REACT_ROUTER_FACADE, REDUX_FACADE, CONTEXT, LIFECYCLE_ACTIONS_CREATOR } from '../identifiers';\nexport default new KernelModule((bind) => {\n    bind(MEDIATOR).to(RetaxMediator).inSingletonScope();\n    bind(REACT_ROUTER_FACADE).to(ReactRouterFacade).inSingletonScope();\n    bind(REDUX_FACADE).to(ReduxFacade).inSingletonScope();\n    bind(COMPONENTS.RETAX_PROVIDER_COMPONENT).toConstructor(RetaxProvider);\n});\nexport function contextModuleFactory(context) {\n    return new KernelModule((bind) => {\n        bind(CONTEXT).toConstantValue(context);\n    });\n}\nexport function lifecycleModuleFactory(LifecycleActionsCreator) {\n    return new KernelModule((bind) => {\n        if (LifecycleActionsCreator) {\n            bind(LIFECYCLE_ACTIONS_CREATOR).to(LifecycleActionsCreator);\n        }\n        else {\n            bind(LIFECYCLE_ACTIONS_CREATOR).toConstantValue(undefined);\n        }\n    });\n}\n"]}