{"version":3,"sources":["src/stateProxies/__tests__/DomStateProxy-test.js","src/stateProxies/__tests__/DomStateProxy-test.ts"],"names":["jest","unmock","describe","retaxConfigStore","config","store","nonImmutableKeys","it","proxy","window","app","here","read","expect","convertStateToImmutable","toBeCalledWith"],"mappings":";;AAIA;;AACA;;;;;;ACLAA,KAAKC,MAAL,CAAY,WAAZ;AACAD,KAAKC,MAAL,CAAY,iBAAZ;AACAD,KAAKC,MAAL,CAAY,gCAAZ;AACAD,KAAKC,MAAL,CAAY,kBAAZ;;AAKAC,SAAS,eAAT,EAA0B,YAAA;AACxB,QAAMC,mBAAmB;AACvBC,gBAAQ;AACLC,mBAAO;AACNC,kCAAkB,CAAC,SAAD;AADZ;AADF;AADe,KAAzB;AAQAC,OAAG,+DAAH,EAAoE,YAAA;AAClE,YAAMC,QAAQ,4BAAuBL,gBAAvB,CAAd;AAEAM,+CAA4B;AAC1BC,iBAAK;AACHC,sBAAM;AADH;AADqB,SAA5B;AAMAH,cAAMI,IAAN;AAEAC,eAAOL,MAAMM,uBAAb,EACGC,cADH,CACkB;AACdL,iBAAK;AACHC,sBAAM;AADH;AADS,SADlB,EAKK,CACC,SADD,CALL;AASD,KApBD;AAqBD,CA9BD","file":"DomStateProxy-test.js","sourcesContent":["jest.unmock('inversify');\njest.unmock('../../constants');\njest.unmock('../../constants/internalConfig');\njest.unmock('../DomStateProxy');\nimport { INITIAL_STATE_KEY } from '../../constants';\nimport DomStateProxy from '../DomStateProxy';\ndescribe('DomStateProxy', () => {\n    const retaxConfigStore = {\n        config: {\n            store: {\n                nonImmutableKeys: ['routing'],\n            },\n        },\n    };\n    it('reads the initial state and convert it to an immutable object', () => {\n        const proxy = new DomStateProxy(retaxConfigStore);\n        window[INITIAL_STATE_KEY] = {\n            app: {\n                here: true,\n            },\n        };\n        proxy.read();\n        expect(proxy.convertStateToImmutable)\n            .toBeCalledWith({\n            app: {\n                here: true,\n            },\n        }, [\n            'routing',\n        ]);\n    });\n});\n","jest.unmock('inversify');\njest.unmock('../../constants');\njest.unmock('../../constants/internalConfig');\njest.unmock('../DomStateProxy');\n\nimport { INITIAL_STATE_KEY } from '../../constants';\nimport DomStateProxy from '../DomStateProxy';\n\ndescribe('DomStateProxy', () => {\n  const retaxConfigStore = {\n    config: {\n       store: {\n        nonImmutableKeys: ['routing'],\n      },\n    },\n  };\n\n  it('reads the initial state and convert it to an immutable object', () => {\n    const proxy = new DomStateProxy(<any>retaxConfigStore);\n\n    window[INITIAL_STATE_KEY] = {\n      app: {\n        here: true,\n      },\n    };\n\n    proxy.read();\n\n    expect(proxy.convertStateToImmutable)\n      .toBeCalledWith({\n        app: {\n          here: true,\n        },\n      }, [\n          'routing',\n      ]);\n\n  });\n});\n"]}